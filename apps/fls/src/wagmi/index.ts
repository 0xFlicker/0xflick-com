// Generated by @wagmi/cli@0.1.15 on 4/13/2023 at 11:39:58 PM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from "wagmi";
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from "wagmi/actions";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TestNFT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "symbol", internalType: "string", type: "string" },
      { name: "uri", internalType: "string", type: "string" },
    ],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "id", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "owner", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "id", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "id", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
  },
] as const;

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftAddress = {
  5: "0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574" as `0x${string}`,
};

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftConfig = {
  address: testNftAddress,
  abi: testNftABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WrappedNFT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export const wrappedNftABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "symbol", internalType: "string", type: "string" },
      { name: "nftContract", internalType: "address", type: "address" },
      { name: "tokenRenderer", internalType: "address", type: "address" },
    ],
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "MustOwnToken",
  },
  { type: "error", inputs: [], name: "MustWrapOneToken" },
  {
    type: "error",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "OperatorNotAllowed",
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "TokenNotWrapped",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_fromTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "_toTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BatchMetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferStarted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
      {
        name: "previousAdminRole",
        internalType: "bytes32",
        type: "bytes32",
        indexed: true,
      },
      {
        name: "newAdminRole",
        internalType: "bytes32",
        type: "bytes32",
        indexed: true,
      },
    ],
    name: "RoleAdminChanged",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
      {
        name: "account",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "RoleGranted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
      {
        name: "account",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "RoleRevoked",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "OPERATOR_FILTER_REGISTRY",
    outputs: [
      {
        name: "",
        internalType: "contract IOperatorFilterRegistry",
        type: "address",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "UPDATE_RENDERER_ROLE",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "UPDATE_ROYALTY_ROLE",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultRoyaltyInfo",
    outputs: [
      { name: "receiver", internalType: "address", type: "address" },
      { name: "royaltyFraction", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
    name: "getRoleAdmin",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "grantRole",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "hasRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "isWrapped",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC721Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "owner", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "pendingOwner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "renderer",
    outputs: [
      {
        name: "",
        internalType: "contract ITokenURIGenerator",
        type: "address",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "renounceRole",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "role", internalType: "bytes32", type: "bytes32" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "revokeRole",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "_salePrice", internalType: "uint256", type: "uint256" },
    ],
    name: "royaltyInfo",
    outputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "royaltyAmount", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "receiver", internalType: "address", type: "address" },
      { name: "feeNumerator", internalType: "uint96", type: "uint96" },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newRenderer", internalType: "address", type: "address" }],
    name: "setRenderer",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "unwrap",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenIds", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "unwrapMany",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenIds", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "wrap",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenIds", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "wrapTo",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "wrappedNft",
    outputs: [{ name: "", internalType: "contract IERC721", type: "address" }],
  },
] as const;

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export const wrappedNftAddress = {
  5: "0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4",
} as const;

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export const wrappedNftConfig = {
  address: wrappedNftAddress,
  abi: wrappedNftABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNft(
  config: Omit<UseContractConfig, "abi" | "address"> & {
    chainId?: keyof typeof testNftAddress;
  } = {} as any
) {
  return useContract({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof testNftABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as UseContractReadConfig<typeof testNftABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftBalanceOf<
  TSelectData = ReadContractResult<typeof testNftABI, "balanceOf">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "balanceOf", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "balanceOf", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftGetApproved<
  TSelectData = ReadContractResult<typeof testNftABI, "getApproved">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "getApproved", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "getApproved",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "getApproved", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftIsApprovedForAll<
  TSelectData = ReadContractResult<typeof testNftABI, "isApprovedForAll">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "isApprovedForAll", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "isApprovedForAll",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "isApprovedForAll", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftName<
  TSelectData = ReadContractResult<typeof testNftABI, "name">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "name", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "name", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftOwnerOf<
  TSelectData = ReadContractResult<typeof testNftABI, "ownerOf">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "ownerOf", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "ownerOf",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "ownerOf", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSupportsInterface<
  TSelectData = ReadContractResult<typeof testNftABI, "supportsInterface">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "supportsInterface", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "supportsInterface",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "supportsInterface", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSymbol<
  TSelectData = ReadContractResult<typeof testNftABI, "symbol">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "symbol", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "symbol", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftTokenUri<
  TSelectData = ReadContractResult<typeof testNftABI, "tokenURI">
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, "tokenURI", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "tokenURI",
    ...config,
  } as UseContractReadConfig<typeof testNftABI, "tokenURI", TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, string>["abi"],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof testNftABI, TFunctionName> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, TFunctionName>({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, "approve">["abi"],
        "approve"
      > & { address?: Address; chainId?: TChainId; functionName?: "approve" }
    : UseContractWriteConfig<TMode, typeof testNftABI, "approve"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, "approve">({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, "mint">["abi"],
        "mint"
      > & { address?: Address; chainId?: TChainId; functionName?: "mint" }
    : UseContractWriteConfig<TMode, typeof testNftABI, "mint"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, "mint">({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof testNftABI,
          "safeTransferFrom"
        >["abi"],
        "safeTransferFrom"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "safeTransferFrom";
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, "safeTransferFrom"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "safeTransferFrom";
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, "safeTransferFrom">({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "safeTransferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof testNftABI,
          "setApprovalForAll"
        >["abi"],
        "setApprovalForAll"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "setApprovalForAll";
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, "setApprovalForAll"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "setApprovalForAll";
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, "setApprovalForAll">({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "setApprovalForAll",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, "transferFrom">["abi"],
        "transferFrom"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "transferFrom";
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, "transferFrom"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<TMode, typeof testNftABI, "transferFrom">({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, TFunctionName>,
    "abi" | "address"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, "approve">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, "mint">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, "safeTransferFrom">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "safeTransferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, "safeTransferFrom">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, "setApprovalForAll">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "setApprovalForAll",
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, "setApprovalForAll">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof testNftABI, TEventName>,
    "abi" | "address"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractEvent({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as UseContractEventConfig<typeof testNftABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testNftABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof testNftABI, "Approval">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractEvent({
    abi: testNftABI,
    address: testNftAddress[5],
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof testNftABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testNftABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof testNftABI, "ApprovalForAll">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractEvent({
    abi: testNftABI,
    address: testNftAddress[5],
    eventName: "ApprovalForAll",
    ...config,
  } as UseContractEventConfig<typeof testNftABI, "ApprovalForAll">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testNftABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof testNftABI, "Transfer">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof testNftAddress } = {} as any
) {
  return useContractEvent({
    abi: testNftABI,
    address: testNftAddress[5],
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof testNftABI, "Transfer">);
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNft(
  config: Omit<UseContractConfig, "abi" | "address"> & {
    chainId?: keyof typeof wrappedNftAddress;
  } = {} as any
) {
  return useContract({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof wrappedNftABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftDefaultAdminRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "DEFAULT_ADMIN_ROLE">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "DEFAULT_ADMIN_ROLE",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "DEFAULT_ADMIN_ROLE",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "DEFAULT_ADMIN_ROLE", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"OPERATOR_FILTER_REGISTRY"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOperatorFilterRegistry<
  TSelectData = ReadContractResult<
    typeof wrappedNftABI,
    "OPERATOR_FILTER_REGISTRY"
  >
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "OPERATOR_FILTER_REGISTRY",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "OPERATOR_FILTER_REGISTRY",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "OPERATOR_FILTER_REGISTRY", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"UPDATE_RENDERER_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftUpdateRendererRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "UPDATE_RENDERER_ROLE">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "UPDATE_RENDERER_ROLE",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "UPDATE_RENDERER_ROLE",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "UPDATE_RENDERER_ROLE", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"UPDATE_ROYALTY_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftUpdateRoyaltyRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "UPDATE_ROYALTY_ROLE">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "UPDATE_ROYALTY_ROLE",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "UPDATE_ROYALTY_ROLE",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "UPDATE_ROYALTY_ROLE", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftBalanceOf<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "balanceOf">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "balanceOf", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "balanceOf", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"claimed"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftClaimed<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "claimed">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "claimed", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "claimed",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "claimed", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"defaultRoyaltyInfo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftDefaultRoyaltyInfo<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "defaultRoyaltyInfo">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "defaultRoyaltyInfo",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "defaultRoyaltyInfo",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "defaultRoyaltyInfo", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftGetApproved<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "getApproved">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "getApproved", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "getApproved",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "getApproved", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftGetRoleAdmin<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "getRoleAdmin">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "getRoleAdmin", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "getRoleAdmin",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "getRoleAdmin", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"hasRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftHasRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "hasRole">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "hasRole", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "hasRole",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "hasRole", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftIsApprovedForAll<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "isApprovedForAll">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "isApprovedForAll",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "isApprovedForAll",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "isApprovedForAll", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"isWrapped"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftIsWrapped<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "isWrapped">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "isWrapped", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "isWrapped",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "isWrapped", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftName<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "name">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "name", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "name", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOwner<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "owner">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "owner", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "owner",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "owner", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOwnerOf<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "ownerOf">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "ownerOf", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "ownerOf",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "ownerOf", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"pendingOwner"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftPendingOwner<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "pendingOwner">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "pendingOwner", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "pendingOwner",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "pendingOwner", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRenderer<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "renderer">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "renderer", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "renderer",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "renderer", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRoyaltyInfo<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "royaltyInfo">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "royaltyInfo", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "royaltyInfo",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "royaltyInfo", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSupportsInterface<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "supportsInterface">
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      "supportsInterface",
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "supportsInterface",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "supportsInterface", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSymbol<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "symbol">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "symbol", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "symbol", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftTokenUri<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "tokenURI">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "tokenURI", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "tokenURI",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "tokenURI", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrappedNft"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftWrappedNft<
  TSelectData = ReadContractResult<typeof wrappedNftABI, "wrappedNft">
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, "wrappedNft", TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "wrappedNft",
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, "wrappedNft", TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, string>["abi"],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, TFunctionName> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, TFunctionName>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftAcceptOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "acceptOwnership"
        >["abi"],
        "acceptOwnership"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "acceptOwnership";
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "acceptOwnership"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "acceptOwnership";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "acceptOwnership">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "acceptOwnership",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "approve">["abi"],
        "approve"
      > & { address?: Address; chainId?: TChainId; functionName?: "approve" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "approve"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "approve">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftGrantRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "grantRole">["abi"],
        "grantRole"
      > & { address?: Address; chainId?: TChainId; functionName?: "grantRole" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "grantRole"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "grantRole";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "grantRole">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "grantRole",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOnErc721Received<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "onERC721Received"
        >["abi"],
        "onERC721Received"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "onERC721Received";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "onERC721Received"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "onERC721Received";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "onERC721Received">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "onERC721Received",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "renounceOwnership"
        >["abi"],
        "renounceOwnership"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "renounceOwnership";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "renounceOwnership"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "renounceOwnership";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "renounceOwnership">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "renounceOwnership",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRenounceRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "renounceRole">["abi"],
        "renounceRole"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "renounceRole";
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "renounceRole"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "renounceRole";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "renounceRole">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "renounceRole",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRevokeRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "revokeRole">["abi"],
        "revokeRole"
      > & { address?: Address; chainId?: TChainId; functionName?: "revokeRole" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "revokeRole"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "revokeRole";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "revokeRole">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "revokeRole",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "safeTransferFrom"
        >["abi"],
        "safeTransferFrom"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "safeTransferFrom";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "safeTransferFrom"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "safeTransferFrom";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "safeTransferFrom">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "safeTransferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "setApprovalForAll"
        >["abi"],
        "setApprovalForAll"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "setApprovalForAll";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "setApprovalForAll"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "setApprovalForAll";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "setApprovalForAll">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setApprovalForAll",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSetDefaultRoyalty<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "setDefaultRoyalty"
        >["abi"],
        "setDefaultRoyalty"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "setDefaultRoyalty";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "setDefaultRoyalty"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "setDefaultRoyalty";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "setDefaultRoyalty">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setDefaultRoyalty",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftSetRenderer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "setRenderer">["abi"],
        "setRenderer"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "setRenderer";
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "setRenderer"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "setRenderer";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "setRenderer">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setRenderer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "transferFrom">["abi"],
        "transferFrom"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "transferFrom";
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "transferFrom"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "transferFrom">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          "transferOwnership"
        >["abi"],
        "transferOwnership"
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "transferOwnership";
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        "transferOwnership"
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "transferOwnership";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "transferOwnership">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "transferOwnership",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftUnwrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "unwrap">["abi"],
        "unwrap"
      > & { address?: Address; chainId?: TChainId; functionName?: "unwrap" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "unwrap"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "unwrap";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "unwrap">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "unwrap",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftUnwrapMany<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "unwrapMany">["abi"],
        "unwrapMany"
      > & { address?: Address; chainId?: TChainId; functionName?: "unwrapMany" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "unwrapMany"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "unwrapMany";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "unwrapMany">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "unwrapMany",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftWrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "wrap">["abi"],
        "wrap"
      > & { address?: Address; chainId?: TChainId; functionName?: "wrap" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "wrap"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "wrap";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "wrap">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "wrap",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftWrapTo<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, "wrapTo">["abi"],
        "wrapTo"
      > & { address?: Address; chainId?: TChainId; functionName?: "wrapTo" }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, "wrapTo"> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "wrapTo";
      } = {} as any
) {
  return useContractWrite<TMode, typeof wrappedNftABI, "wrapTo">({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "wrapTo",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, TFunctionName>,
    "abi" | "address"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "acceptOwnership">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "acceptOwnership",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "acceptOwnership">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "approve">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "grantRole">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "grantRole",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "grantRole">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftOnErc721Received(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "onERC721Received">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "onERC721Received",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "onERC721Received">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "renounceOwnership">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "renounceOwnership",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "renounceOwnership">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "renounceRole">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "renounceRole",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "renounceRole">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "revokeRole">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "revokeRole",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "revokeRole">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "safeTransferFrom">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "safeTransferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "safeTransferFrom">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "setApprovalForAll">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setApprovalForAll",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "setApprovalForAll">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftSetDefaultRoyalty(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "setDefaultRoyalty">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setDefaultRoyalty",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "setDefaultRoyalty">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftSetRenderer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "setRenderer">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "setRenderer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "setRenderer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "transferFrom">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "transferOwnership">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "transferOwnership",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "transferOwnership">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "unwrap">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "unwrap",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "unwrap">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftUnwrapMany(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "unwrapMany">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "unwrapMany",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "unwrapMany">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftWrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "wrap">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "wrap",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "wrap">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function usePrepareWrappedNftWrapTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, "wrapTo">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: "wrapTo",
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, "wrapTo">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, TEventName>,
    "abi" | "address"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5] as `0x${string}`,
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "Approval">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "ApprovalForAll">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "ApprovalForAll",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "ApprovalForAll">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"BatchMetadataUpdate"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftBatchMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "BatchMetadataUpdate">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "BatchMetadataUpdate",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "BatchMetadataUpdate">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"MetadataUpdate"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "MetadataUpdate">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "MetadataUpdate",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "MetadataUpdate">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"OwnershipTransferStarted"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOwnershipTransferStartedEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "OwnershipTransferStarted">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "OwnershipTransferStarted",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "OwnershipTransferStarted">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "OwnershipTransferred">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "OwnershipTransferred",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "OwnershipTransferred">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"RoleAdminChanged"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRoleAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "RoleAdminChanged">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "RoleAdminChanged",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "RoleAdminChanged">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"RoleGranted"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRoleGrantedEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "RoleGranted">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "RoleGranted",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "RoleGranted">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"RoleRevoked"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftRoleRevokedEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "RoleRevoked">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "RoleRevoked",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "RoleRevoked">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link wrappedNftABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xff3cC4aDD1a4A967fDfa8D0E02472709939553c4)
 */
export function useWrappedNftTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof wrappedNftABI, "Transfer">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any
) {
  return useContractEvent({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof wrappedNftABI, "Transfer">);
}
