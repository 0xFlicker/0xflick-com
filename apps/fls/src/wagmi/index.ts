// Generated by @wagmi/cli@0.1.15 on 4/20/2023 at 10:18:44 PM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TestNFT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftAddress = {
  5: '0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574',
} as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export const testNftConfig = {
  address: testNftAddress,
  abi: testNftABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BulkMinter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export const bulkMinterABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastMintedTokenId',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'count', internalType: 'uint128', type: 'uint128' }],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export const bulkMinterAddress = {
  5: '0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6',
} as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export const bulkMinterConfig = {
  address: bulkMinterAddress,
  abi: bulkMinterABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WrappedNFT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export const wrappedNftABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'nftContract', internalType: 'address', type: 'address' },
      { name: 'tokenRenderer', internalType: 'address', type: 'address' },
    ],
  },
  {
    type: 'error',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'MustOwnToken',
  },
  { type: 'error', inputs: [], name: 'MustWrapOneToken' },
  {
    type: 'error',
    inputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
    name: 'OperatorNotAllowed',
  },
  {
    type: 'error',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenNotWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: '_toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'BatchMetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferStarted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'previousAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'RoleAdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EMIT_METADATA_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'OPERATOR_FILTER_REGISTRY',
    outputs: [
      {
        name: '',
        internalType: 'contract IOperatorFilterRegistry',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'TREASURER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'UPDATE_RENDERER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'claimed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultRoyaltyInfo',
    outputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'royaltyFraction', internalType: 'uint96', type: 'uint96' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'emitMetadataUpdate',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'isWrapped',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'renderer',
    outputs: [
      {
        name: '',
        internalType: 'contract ITokenURIGenerator',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '_salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'feeNumerator', internalType: 'uint96', type: 'uint96' },
    ],
    name: 'setDefaultRoyalty',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newRenderer', internalType: 'address', type: 'address' }],
    name: 'setRenderer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'cost', internalType: 'uint256', type: 'uint256' }],
    name: 'setWrapCost',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'unwrap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'unwrapMany',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'wrap',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'wrapCost',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'wrapTo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'wrappedNft',
    outputs: [{ name: '', internalType: 'contract IERC721', type: 'address' }],
  },
] as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export const wrappedNftAddress = {
  5: '0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905',
} as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export const wrappedNftConfig = {
  address: wrappedNftAddress,
  abi: wrappedNftABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FameLadySociety
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export const fameLadySocietyABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'nftContract', internalType: 'address', type: 'address' },
      { name: 'tokenRenderer', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'DevTipFailed' },
  {
    type: 'error',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'MustOwnToken',
  },
  { type: 'error', inputs: [], name: 'MustWrapOneToken' },
  { type: 'error', inputs: [], name: 'NoContractUri' },
  {
    type: 'error',
    inputs: [{ name: 'required', internalType: 'uint256', type: 'uint256' }],
    name: 'NotEnoughEther',
  },
  {
    type: 'error',
    inputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
    name: 'OperatorNotAllowed',
  },
  {
    type: 'error',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenNotWrapped',
  },
  { type: 'error', inputs: [], name: 'WithdrawFailed' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: '_toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'BatchMetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferStarted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'previousAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'RoleAdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EMIT_METADATA_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'OPERATOR_FILTER_REGISTRY',
    outputs: [
      {
        name: '',
        internalType: 'contract IOperatorFilterRegistry',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'TREASURER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'UPDATE_RENDERER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'claimed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultRoyaltyInfo',
    outputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'royaltyFraction', internalType: 'uint96', type: 'uint96' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'emitMetadataUpdate',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'isWrapped',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'renderer',
    outputs: [
      {
        name: '',
        internalType: 'contract ITokenURIGenerator',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '_salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'uri', internalType: 'string', type: 'string' }],
    name: 'setContractURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'feeNumerator', internalType: 'uint96', type: 'uint96' },
    ],
    name: 'setDefaultRoyalty',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newRenderer', internalType: 'address', type: 'address' }],
    name: 'setRenderer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'cost', internalType: 'uint256', type: 'uint256' }],
    name: 'setWrapCost',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'unwrap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'unwrapMany',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'wrap',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'wrapCost',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'wrapTo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'wrappedNft',
    outputs: [{ name: '', internalType: 'contract IERC721', type: 'address' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export const fameLadySocietyAddress = {
  1: '0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export const fameLadySocietyConfig = {
  address: fameLadySocietyAddress,
  abi: fameLadySocietyABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FameLadySquad
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export const fameLadySquadABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'baseURI', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_LADY_SUPPLY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'SALE_START_TIMESTAMP',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'baseURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'baseURI', internalType: 'string', type: 'string' }],
    name: 'changeBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'getNFTPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'numberOfLadies', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintLady',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export const fameLadySquadAddress = {
  1: '0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export const fameLadySquadConfig = {
  address: fameLadySquadAddress,
  abi: fameLadySquadABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNft(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof testNftAddress
  } = {} as any,
) {
  return useContract({ abi: testNftABI, address: testNftAddress[5], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof testNftABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as UseContractReadConfig<typeof testNftABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftBalanceOf<
  TSelectData = ReadContractResult<typeof testNftABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftGetApproved<
  TSelectData = ReadContractResult<typeof testNftABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftIsApprovedForAll<
  TSelectData = ReadContractResult<typeof testNftABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'isApprovedForAll', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof testNftABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftName<
  TSelectData = ReadContractResult<typeof testNftABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftOwnerOf<
  TSelectData = ReadContractResult<typeof testNftABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSupportsInterface<
  TSelectData = ReadContractResult<typeof testNftABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'supportsInterface', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof testNftABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSymbol<
  TSelectData = ReadContractResult<typeof testNftABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftTokenUri<
  TSelectData = ReadContractResult<typeof testNftABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof testNftABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return useContractRead({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof testNftABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof testNftABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, TFunctionName>({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof testNftABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, 'approve'>({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, 'mint'>['abi'],
        'mint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof testNftABI, 'mint'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, 'mint'>({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof testNftABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, 'safeTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, 'safeTransferFrom'>({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof testNftABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, 'setApprovalForAll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, 'setApprovalForAll'>({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function useTestNftTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof testNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof testNftABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof testNftABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof testNftABI, 'transferFrom'>({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x6cF4328f1Ea83B5d592474F9fCDC714FAAfd1574)
 */
export function usePrepareTestNftTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof testNftABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof testNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: testNftABI,
    address: testNftAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof testNftABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link bulkMinterABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinter(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof bulkMinterAddress
  } = {} as any,
) {
  return useContract({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bulkMinterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterMaxSupply<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'MAX_SUPPLY'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'MAX_SUPPLY', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'MAX_SUPPLY', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterBalanceOf<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterGetApproved<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterIsApprovedForAll<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof bulkMinterABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof bulkMinterABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"lastMintedTokenId"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterLastMintedTokenId<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'lastMintedTokenId'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof bulkMinterABI,
      'lastMintedTokenId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'lastMintedTokenId',
    ...config,
  } as UseContractReadConfig<
    typeof bulkMinterABI,
    'lastMintedTokenId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterName<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterOwnerOf<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterSupportsInterface<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof bulkMinterABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof bulkMinterABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterSymbol<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterTokenUri<
  TSelectData = ReadContractResult<typeof bulkMinterABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof bulkMinterABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return useContractRead({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof bulkMinterABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof bulkMinterABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof bulkMinterABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, TFunctionName>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof bulkMinterABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof bulkMinterABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, 'approve'>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof bulkMinterABI, 'mint'>['abi'],
        'mint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof bulkMinterABI, 'mint'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, 'mint'>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof bulkMinterABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof bulkMinterABI,
        'safeTransferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, 'safeTransferFrom'>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof bulkMinterABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        TMode,
        typeof bulkMinterABI,
        'setApprovalForAll'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, 'setApprovalForAll'>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function useBulkMinterTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof bulkMinterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof bulkMinterABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof bulkMinterABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof bulkMinterABI, 'transferFrom'>({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bulkMinterABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xb4Ff1F5Efb04d5592244Ad27c99b5300208E52a6)
 */
export function usePrepareBulkMinterTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bulkMinterABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof bulkMinterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: bulkMinterABI,
    address: bulkMinterAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof bulkMinterABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNft(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof wrappedNftAddress
  } = {} as any,
) {
  return useContract({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof wrappedNftABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftDefaultAdminRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'DEFAULT_ADMIN_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'DEFAULT_ADMIN_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'DEFAULT_ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'DEFAULT_ADMIN_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"EMIT_METADATA_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftEmitMetadataRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'EMIT_METADATA_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'EMIT_METADATA_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'EMIT_METADATA_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'EMIT_METADATA_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"OPERATOR_FILTER_REGISTRY"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftOperatorFilterRegistry<
  TSelectData = ReadContractResult<
    typeof wrappedNftABI,
    'OPERATOR_FILTER_REGISTRY'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'OPERATOR_FILTER_REGISTRY',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'OPERATOR_FILTER_REGISTRY',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'OPERATOR_FILTER_REGISTRY',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"TREASURER_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftTreasurerRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'TREASURER_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'TREASURER_ROLE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'TREASURER_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'TREASURER_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"UPDATE_RENDERER_ROLE"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftUpdateRendererRole<
  TSelectData = ReadContractResult<
    typeof wrappedNftABI,
    'UPDATE_RENDERER_ROLE'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'UPDATE_RENDERER_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'UPDATE_RENDERER_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'UPDATE_RENDERER_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftBalanceOf<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"claimed"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftClaimed<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'claimed'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'claimed', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'claimed',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'claimed', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"defaultRoyaltyInfo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftDefaultRoyaltyInfo<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'defaultRoyaltyInfo'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'defaultRoyaltyInfo',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'defaultRoyaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'defaultRoyaltyInfo',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftGetApproved<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftGetRoleAdmin<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'getRoleAdmin'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'getRoleAdmin', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'getRoleAdmin',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'getRoleAdmin', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"hasRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftHasRole<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'hasRole'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'hasRole', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'hasRole',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'hasRole', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftIsApprovedForAll<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"isWrapped"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftIsWrapped<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'isWrapped'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'isWrapped', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'isWrapped',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'isWrapped', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftName<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftOwner<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftOwnerOf<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"pendingOwner"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftPendingOwner<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'pendingOwner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'pendingOwner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'pendingOwner',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'pendingOwner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRenderer<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'renderer'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'renderer', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'renderer',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'renderer', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRoyaltyInfo<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'royaltyInfo'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'royaltyInfo', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'royaltyInfo', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSupportsInterface<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof wrappedNftABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof wrappedNftABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSymbol<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftTokenUri<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrapCost"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftWrapCost<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'wrapCost'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'wrapCost', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrapCost',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'wrapCost', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrappedNft"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftWrappedNft<
  TSelectData = ReadContractResult<typeof wrappedNftABI, 'wrappedNft'>,
>(
  config: Omit<
    UseContractReadConfig<typeof wrappedNftABI, 'wrappedNft', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return useContractRead({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrappedNft',
    ...config,
  } as UseContractReadConfig<typeof wrappedNftABI, 'wrappedNft', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, TFunctionName>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftAcceptOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'acceptOwnership'
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'acceptOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'acceptOwnership'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'approve'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"emitMetadataUpdate"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftEmitMetadataUpdate<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'emitMetadataUpdate'
        >['abi'],
        'emitMetadataUpdate'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'emitMetadataUpdate'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'emitMetadataUpdate'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'emitMetadataUpdate'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'emitMetadataUpdate'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'emitMetadataUpdate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftGrantRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'grantRole'>['abi'],
        'grantRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'grantRole' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'grantRole'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'grantRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'grantRole'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'grantRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftOnErc721Received<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'onERC721Received'
        >['abi'],
        'onERC721Received'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'onERC721Received'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'onERC721Received'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'onERC721Received'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'onERC721Received'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'onERC721Received',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'renounceOwnership'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRenounceRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'renounceRole'>['abi'],
        'renounceRole'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceRole'
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'renounceRole'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'renounceRole'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'renounceRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftRevokeRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'revokeRole'>['abi'],
        'revokeRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'revokeRole' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'revokeRole'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'revokeRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'revokeRole'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'revokeRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'safeTransferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'safeTransferFrom'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'setApprovalForAll'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'setApprovalForAll'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSetDefaultRoyalty<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'setDefaultRoyalty'
        >['abi'],
        'setDefaultRoyalty'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setDefaultRoyalty'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'setDefaultRoyalty'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDefaultRoyalty'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'setDefaultRoyalty'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setDefaultRoyalty',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSetRenderer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'setRenderer'>['abi'],
        'setRenderer'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRenderer'
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'setRenderer'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRenderer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'setRenderer'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setRenderer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setWrapCost"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftSetWrapCost<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'setWrapCost'>['abi'],
        'setWrapCost'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setWrapCost'
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'setWrapCost'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setWrapCost'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'setWrapCost'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setWrapCost',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'transferFrom'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof wrappedNftABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof wrappedNftABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'transferOwnership'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftUnwrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'unwrap'>['abi'],
        'unwrap'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unwrap' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'unwrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrap'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'unwrap'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftUnwrapMany<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'unwrapMany'>['abi'],
        'unwrapMany'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unwrapMany' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'unwrapMany'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrapMany'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'unwrapMany'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'unwrapMany',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftWrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'wrap'>['abi'],
        'wrap'
      > & { address?: Address; chainId?: TChainId; functionName?: 'wrap' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'wrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrap'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'wrap'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function useWrappedNftWrapTo<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof wrappedNftAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof wrappedNftABI, 'wrapTo'>['abi'],
        'wrapTo'
      > & { address?: Address; chainId?: TChainId; functionName?: 'wrapTo' }
    : UseContractWriteConfig<TMode, typeof wrappedNftABI, 'wrapTo'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrapTo'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof wrappedNftABI, 'wrapTo'>({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrapTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'acceptOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'acceptOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"emitMetadataUpdate"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftEmitMetadataUpdate(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'emitMetadataUpdate'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'emitMetadataUpdate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof wrappedNftABI,
    'emitMetadataUpdate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'grantRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'grantRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'grantRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftOnErc721Received(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'onERC721Received'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'onERC721Received',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'onERC721Received'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'renounceRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'renounceRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'renounceRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'revokeRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'revokeRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'revokeRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftSetDefaultRoyalty(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setDefaultRoyalty'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setDefaultRoyalty',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setDefaultRoyalty'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftSetRenderer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setRenderer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setRenderer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setRenderer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"setWrapCost"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftSetWrapCost(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setWrapCost'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'setWrapCost',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'setWrapCost'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'unwrap'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'unwrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftUnwrapMany(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'unwrapMany'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'unwrapMany',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'unwrapMany'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftWrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'wrap'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'wrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link wrappedNftABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xD0E65bFf3612a9A5f1d620BD7245e95Cc4A7c905)
 */
export function usePrepareWrappedNftWrapTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof wrappedNftABI, 'wrapTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof wrappedNftAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: wrappedNftABI,
    address: wrappedNftAddress[5],
    functionName: 'wrapTo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof wrappedNftABI, 'wrapTo'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link fameLadySocietyABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySociety(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof fameLadySocietyAddress
  } = {} as any,
) {
  return useContract({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyDefaultAdminRole<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'DEFAULT_ADMIN_ROLE'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'DEFAULT_ADMIN_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'DEFAULT_ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'DEFAULT_ADMIN_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"EMIT_METADATA_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyEmitMetadataRole<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'EMIT_METADATA_ROLE'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'EMIT_METADATA_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'EMIT_METADATA_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'EMIT_METADATA_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"OPERATOR_FILTER_REGISTRY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyOperatorFilterRegistry<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'OPERATOR_FILTER_REGISTRY'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'OPERATOR_FILTER_REGISTRY',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'OPERATOR_FILTER_REGISTRY',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'OPERATOR_FILTER_REGISTRY',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"TREASURER_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyTreasurerRole<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'TREASURER_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'TREASURER_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'TREASURER_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'TREASURER_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"UPDATE_RENDERER_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyUpdateRendererRole<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'UPDATE_RENDERER_ROLE'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'UPDATE_RENDERER_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'UPDATE_RENDERER_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'UPDATE_RENDERER_ROLE',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyBalanceOf<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"claimed"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyClaimed<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'claimed'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'claimed', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'claimed',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'claimed', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"contractURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyContractUri<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'contractURI'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'contractURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'contractURI',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'contractURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"defaultRoyaltyInfo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyDefaultRoyaltyInfo<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'defaultRoyaltyInfo'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'defaultRoyaltyInfo',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'defaultRoyaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'defaultRoyaltyInfo',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyGetApproved<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyGetRoleAdmin<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'getRoleAdmin'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'getRoleAdmin',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'getRoleAdmin',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'getRoleAdmin',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"hasRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyHasRole<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'hasRole'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'hasRole', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'hasRole',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'hasRole', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"isWrapped"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyIsWrapped<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'isWrapped'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'isWrapped', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'isWrapped',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'isWrapped',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyName<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyOwner<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyOwnerOf<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"pendingOwner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyPendingOwner<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'pendingOwner'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'pendingOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'pendingOwner',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'pendingOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"renderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRenderer<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'renderer'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'renderer', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'renderer',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'renderer',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRoyaltyInfo<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'royaltyInfo'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'royaltyInfo',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'royaltyInfo',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySupportsInterface<
  TSelectData = ReadContractResult<
    typeof fameLadySocietyABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySocietyABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySymbol<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof fameLadySocietyABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyTokenUri<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrapCost"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWrapCost<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'wrapCost'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'wrapCost', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrapCost',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'wrapCost',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrappedNft"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWrappedNft<
  TSelectData = ReadContractResult<typeof fameLadySocietyABI, 'wrappedNft'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySocietyABI, 'wrappedNft', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrappedNft',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySocietyABI,
    'wrappedNft',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySocietyABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        TFunctionName
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, TFunctionName>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyAcceptOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'acceptOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'acceptOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'acceptOwnership'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySocietyABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'approve'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"emitMetadataUpdate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyEmitMetadataUpdate<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'emitMetadataUpdate'
        >['abi'],
        'emitMetadataUpdate'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'emitMetadataUpdate'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'emitMetadataUpdate'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'emitMetadataUpdate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof fameLadySocietyABI,
    'emitMetadataUpdate'
  >({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'emitMetadataUpdate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyGrantRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'grantRole'
        >['abi'],
        'grantRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'grantRole' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'grantRole'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'grantRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'grantRole'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'grantRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyOnErc721Received<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'onERC721Received'
        >['abi'],
        'onERC721Received'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'onERC721Received'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'onERC721Received'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'onERC721Received'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'onERC721Received'>(
    {
      abi: fameLadySocietyABI,
      address: fameLadySocietyAddress[1],
      functionName: 'onERC721Received',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof fameLadySocietyABI,
    'renounceOwnership'
  >({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRenounceRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'renounceRole'
        >['abi'],
        'renounceRole'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceRole'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'renounceRole'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'renounceRole'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'renounceRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyRevokeRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'revokeRole'
        >['abi'],
        'revokeRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'revokeRole' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'revokeRole'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'revokeRole'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'revokeRole'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'revokeRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'safeTransferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'safeTransferFrom'>(
    {
      abi: fameLadySocietyABI,
      address: fameLadySocietyAddress[1],
      functionName: 'safeTransferFrom',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'setApprovalForAll'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof fameLadySocietyABI,
    'setApprovalForAll'
  >({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setContractURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySetContractUri<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'setContractURI'
        >['abi'],
        'setContractURI'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setContractURI'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'setContractURI'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setContractURI'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'setContractURI'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setContractURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySetDefaultRoyalty<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'setDefaultRoyalty'
        >['abi'],
        'setDefaultRoyalty'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setDefaultRoyalty'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'setDefaultRoyalty'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDefaultRoyalty'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof fameLadySocietyABI,
    'setDefaultRoyalty'
  >({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setDefaultRoyalty',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySetRenderer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'setRenderer'
        >['abi'],
        'setRenderer'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRenderer'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'setRenderer'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRenderer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'setRenderer'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setRenderer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setWrapCost"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietySetWrapCost<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'setWrapCost'
        >['abi'],
        'setWrapCost'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setWrapCost'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'setWrapCost'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setWrapCost'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'setWrapCost'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setWrapCost',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'transferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'transferFrom'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySocietyABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof fameLadySocietyABI,
    'transferOwnership'
  >({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyUnwrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySocietyABI, 'unwrap'>['abi'],
        'unwrap'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unwrap' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'unwrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrap'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'unwrap'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyUnwrapMany<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'unwrapMany'
        >['abi'],
        'unwrapMany'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unwrapMany' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'unwrapMany'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrapMany'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'unwrapMany'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'unwrapMany',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWithdraw<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySocietyABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'withdraw'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWrap<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySocietyABI, 'wrap'>['abi'],
        'wrap'
      > & { address?: Address; chainId?: TChainId; functionName?: 'wrap' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'wrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrap'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'wrap'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function useFameLadySocietyWrapTo<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySocietyAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySocietyABI, 'wrapTo'>['abi'],
        'wrapTo'
      > & { address?: Address; chainId?: TChainId; functionName?: 'wrapTo' }
    : UseContractWriteConfig<TMode, typeof fameLadySocietyABI, 'wrapTo'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrapTo'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySocietyABI, 'wrapTo'>({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrapTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"acceptOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'acceptOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"emitMetadataUpdate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyEmitMetadataUpdate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'emitMetadataUpdate'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'emitMetadataUpdate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'emitMetadataUpdate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'grantRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'grantRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'grantRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyOnErc721Received(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'onERC721Received'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'onERC721Received',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'onERC721Received'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'renounceOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'renounceRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'renounceRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'renounceRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'revokeRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'revokeRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'revokeRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setContractURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySetContractUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'setContractURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setContractURI',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'setContractURI'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setDefaultRoyalty"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySetDefaultRoyalty(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'setDefaultRoyalty'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setDefaultRoyalty',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'setDefaultRoyalty'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySetRenderer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'setRenderer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setRenderer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'setRenderer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"setWrapCost"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietySetWrapCost(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'setWrapCost'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'setWrapCost',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'setWrapCost'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fameLadySocietyABI,
      'transferOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySocietyABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"unwrap"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'unwrap'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'unwrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"unwrapMany"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyUnwrapMany(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'unwrapMany'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'unwrapMany',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'unwrapMany'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'withdraw'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrap"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyWrap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'wrap'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'wrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySocietyABI}__ and `functionName` set to `"wrapTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x6cf4328f1ea83b5d592474f9fcdc714faafd1574)
 */
export function usePrepareFameLadySocietyWrapTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'wrapTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySocietyAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySocietyABI,
    address: fameLadySocietyAddress[1],
    functionName: 'wrapTo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySocietyABI, 'wrapTo'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link fameLadySquadABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquad(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof fameLadySquadAddress
  } = {} as any,
) {
  return useContract({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof fameLadySquadABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"MAX_LADY_SUPPLY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadMaxLadySupply<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'MAX_LADY_SUPPLY'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySquadABI,
      'MAX_LADY_SUPPLY',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'MAX_LADY_SUPPLY',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'MAX_LADY_SUPPLY',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"SALE_START_TIMESTAMP"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadSaleStartTimestamp<
  TSelectData = ReadContractResult<
    typeof fameLadySquadABI,
    'SALE_START_TIMESTAMP'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySquadABI,
      'SALE_START_TIMESTAMP',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'SALE_START_TIMESTAMP',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'SALE_START_TIMESTAMP',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadBalanceOf<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"baseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadBaseUri<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'baseURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'baseURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'baseURI',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'baseURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadGetApproved<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"getNFTPrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadGetNftPrice<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'getNFTPrice'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'getNFTPrice', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'getNFTPrice',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'getNFTPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadIsApprovedForAll<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySquadABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadName<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadOwner<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadOwnerOf<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadSupportsInterface<
  TSelectData = ReadContractResult<
    typeof fameLadySquadABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySquadABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadSymbol<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTokenByIndex<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'tokenByIndex'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'tokenByIndex', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof fameLadySquadABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof fameLadySquadABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTokenUri<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof fameLadySquadABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTotalSupply<
  TSelectData = ReadContractResult<typeof fameLadySquadABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof fameLadySquadABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return useContractRead({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof fameLadySquadABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySquadABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof fameLadySquadABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, TFunctionName>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySquadABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof fameLadySquadABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'approve'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"changeBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadChangeBaseUri<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'changeBaseURI'
        >['abi'],
        'changeBaseURI'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'changeBaseURI'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySquadABI,
        'changeBaseURI'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'changeBaseURI'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'changeBaseURI'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'changeBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"mintLady"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadMintLady<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySquadABI, 'mintLady'>['abi'],
        'mintLady'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mintLady' }
    : UseContractWriteConfig<TMode, typeof fameLadySquadABI, 'mintLady'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mintLady'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'mintLady'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'mintLady',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySquadABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'renounceOwnership'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySquadABI,
        'safeTransferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'safeTransferFrom'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySquadABI,
        'setApprovalForAll'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'setApprovalForAll'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof fameLadySquadABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'transferFrom'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof fameLadySquadABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof fameLadySquadABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'transferOwnership'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function useFameLadySquadWithdraw<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof fameLadySquadAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof fameLadySquadABI, 'withdraw'>['abi'],
        'withdraw'
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<TMode, typeof fameLadySquadABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof fameLadySquadABI, 'withdraw'>({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"changeBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadChangeBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'changeBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'changeBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'changeBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"mintLady"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadMintLady(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'mintLady'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'mintLady',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'mintLady'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySquadABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySquadABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySquadABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fameLadySquadABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fameLadySquadABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xf3E6DbBE461C6fa492CeA7Cb1f5C5eA660EB1B47)
 */
export function usePrepareFameLadySquadWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof fameLadySquadAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: fameLadySquadABI,
    address: fameLadySquadAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof fameLadySquadABI, 'withdraw'>)
}
