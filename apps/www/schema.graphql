type Nonce {
  nonce: Int!
}

enum PermissionAction {
  CREATE
  UPDATE
  DELETE
  LIST
  GET
  USE
  ADMIN
}

enum PermissionResource {
  ALL
  USER
  USER_ROLE
  ADMIN
  PRESALE
  FAUCET
  PERMISSION
  ROLE
}

type Permission {
  action: PermissionAction!
  resource: PermissionResource!
}

type Role {
  id: ID!
  name: String!
  permissions: [Permission!]!
}

type Web3User {
  address: ID!
  nonce: Int!
  roles: [Role!]!
  allowedActions: [Permission!]!
}

type Web3LoginUser {
  address: ID!
  user: Web3User!
  token: String!
}

type MetadataProperties {
  name: String!
  value: String!
}

type MetadataAttributeString {
  value: String!
  trait_type: String!
  colors: [String!]
}

type MetadataAttributeNumeric {
  value: Float!
  trait_type: String
  display_type: String
}

union MetadataAttribute = MetadataAttributeString | MetadataAttributeNumeric

type Metadata {
  image: String
  description: String
  tokenId: String!
  id: String!
  externalUrl: String
  name: String
  attributes: [MetadataAttribute!]
  properties: [MetadataProperties!]
  edition: String
}

type NftToken {
  id: ID!
  tokenId: String!
  image(width: Int, height: Int): String
  metadata: Metadata
}

type Nft {
  collectionName: String!
  contractAddress: String!
  ownedTokens: [NftToken!]!
}

type Flick {
  nfts: [Nft!]
}

type Query {
  flick: Flick
  image(contract: String!, tokenId: Int!, width: Int, height: Int): String
  nonceForAddress(address: String!): Nonce
}

type Mutation {
  signIn(address: String!, jwe: String!): Web3LoginUser
  signOut: Boolean!
}