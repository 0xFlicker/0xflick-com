/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BaseRegistrarImplementation,
  BaseRegistrarImplementationInterface,
} from "../../../../../@ensdomains/ens-contracts/contracts/ethregistrar/BaseRegistrarImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "_ens",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_baseNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameMigrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "addController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseNode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "nameExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "reclaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "register",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "registerOnly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "removeController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f3138038062001f318339810160408190526200003491620001bc565b604080516020808201808452600080845284519283019094528382528251929391926200006392919062000116565b5080516200007990600190602084019062000116565b5050506200009662000090620000c060201b60201c565b620000c4565b600880546001600160a01b0319166001600160a01b03939093169290921790915560095562000235565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012490620001f8565b90600052602060002090601f01602090048101928262000148576000855562000193565b82601f106200016357805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019357825182559160200191906001019062000176565b50620001a1929150620001a5565b5090565b5b80821115620001a15760008155600101620001a6565b60008060408385031215620001d057600080fd5b82516001600160a01b0381168114620001e857600080fd5b6020939093015192949293505050565b600181811c908216806200020d57607f821691505b602082108114156200022f57634e487b7160e01b600052602260045260246000fd5b50919050565b611cec80620002456000396000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c806301ffc9a71461016457806306fdde031461018c578063081812fc146101a1578063095ea7b3146101cc5780630e297b45146101e157806323b872dd1461020257806328ed4f6c146102155780633f15457f1461022857806342842e0e1461023b5780634e543b261461024e5780636352211e1461026157806370a0823114610274578063715018a6146102875780638da5cb5b1461028f57806395d89b411461029757806396e494e81461029f578063a22cb465146102b2578063a7fc7a07146102c5578063b88d4fde146102d8578063c1a287e2146102eb578063c475abff146102f5578063c87b56dd14610308578063d6e4fa861461031b578063da8c229e1461033b578063ddf7fcb01461035e578063e985e9c514610367578063f2fde38b1461037a578063f6a74ed71461038d578063fca247ac146103a0575b600080fd5b6101776101723660046116e8565b6103b3565b60405190151581526020015b60405180910390f35b610194610405565b604051610183919061175d565b6101b46101af366004611770565b610497565b6040516001600160a01b039091168152602001610183565b6101df6101da36600461179e565b6104be565b005b6101f46101ef3660046117ca565b6105d9565b604051908152602001610183565b6101df610210366004611802565b6105f0565b6101df610223366004611832565b610621565b6008546101b4906001600160a01b031681565b6101df610249366004611802565b61074e565b6101df61025c366004611862565b610769565b6101b461026f366004611770565b6107de565b6101f4610282366004611862565b610801565b6101df610887565b6101b461089b565b6101946108aa565b6101776102ad366004611770565b6108b9565b6101df6102c036600461187f565b6108df565b6101df6102d3366004611862565b6108ee565b6101df6102e63660046118c8565b610942565b6101f46276a70081565b6101f46103033660046119a7565b61097a565b610194610316366004611770565b610b1a565b6101f4610329366004611770565b60009081526007602052604090205490565b610177610349366004611862565b600a6020526000908152604090205460ff1681565b6101f460095481565b6101776103753660046119c9565b610b8e565b6101df610388366004611862565b610bbc565b6101df61039b366004611862565b610c35565b6101f46103ae3660046117ca565b610c86565b60006001600160e01b031982166301ffc9a760e01b14806103e457506001600160e01b031982166380ac58cd60e01b145b806103ff57506001600160e01b03198216630a3b53db60e21b145b92915050565b606060008054610414906119f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610440906119f7565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b5050505050905090565b60006104a282610c95565b506000908152600460205260409020546001600160a01b031690565b60006104c982610cba565b9050806001600160a01b0316836001600160a01b0316141561053c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061055857506105588133610b8e565b6105ca5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610533565b6105d48383610cef565b505050565b60006105e88484846000610d5d565b949350505050565b6105fa3382610f75565b6106165760405162461bcd60e51b815260040161053390611a32565b6105d4838383610fcc565b6008546009546040516302571be360e01b8152600481019190915230916001600160a01b0316906302571be39060240160206040518083038186803b15801561066957600080fd5b505afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190611a80565b6001600160a01b0316146106b457600080fd5b6106be3383610f75565b6106c757600080fd5b6008546009546040516306ab592360e01b81526001600160a01b03909216916306ab5923916106fc9186908690600401611a9d565b602060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d49190611abc565b6105d483838360405180602001604052806000815250610942565b610771611156565b600854600954604051630c4b7b8560e11b815260048101919091526001600160a01b03838116602483015290911690631896f70a90604401600060405180830381600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b5050505050565b60008181526007602052604081205442106107f857600080fd5b6103ff82610cba565b60006001600160a01b03821661086b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610533565b506001600160a01b031660009081526003602052604090205490565b61088f611156565b61089960006111b5565b565b6006546001600160a01b031690565b606060018054610414906119f7565b60008181526007602052604081205442906108d8906276a70090611aeb565b1092915050565b6108ea338383611207565b5050565b6108f6611156565b6001600160a01b0381166000818152600a6020526040808220805460ff19166001179055517f0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d74749190a250565b61094c3383610f75565b6109685760405162461bcd60e51b815260040161053390611a32565b610974848484846112d2565b50505050565b6008546009546040516302571be360e01b8152600481019190915260009130916001600160a01b03909116906302571be39060240160206040518083038186803b1580156109c757600080fd5b505afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611a80565b6001600160a01b031614610a1257600080fd5b336000908152600a602052604090205460ff16610a2e57600080fd5b6000838152600760205260409020544290610a4d906276a70090611aeb565b1015610a5857600080fd5b610a656276a70083611aeb565b6000848152600760205260409020546276a70090610a84908590611aeb565b610a8e9190611aeb565b11610a9857600080fd5b60008381526007602052604081208054849290610ab6908490611aeb565b90915550506000838152600760205260409081902054905184917f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd691610afe91815260200190565b60405180910390a2505060009081526007602052604090205490565b6060610b2582610c95565b6000610b3c60408051602081019091526000815290565b90506000815111610b5c5760405180602001604052806000815250610b87565b80610b6684611305565b604051602001610b77929190611b03565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610bc4611156565b6001600160a01b038116610c295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610533565b610c32816111b5565b50565b610c3d611156565b6001600160a01b0381166000818152600a6020526040808220805460ff19169055517f33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e811139190a250565b60006105e88484846001610d5d565b610c9e81611402565b610c325760405162461bcd60e51b815260040161053390611b32565b6000818152600260205260408120546001600160a01b0316806103ff5760405162461bcd60e51b815260040161053390611b32565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d2482610cba565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6008546009546040516302571be360e01b8152600481019190915260009130916001600160a01b03909116906302571be39060240160206040518083038186803b158015610daa57600080fd5b505afa158015610dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de29190611a80565b6001600160a01b031614610df557600080fd5b336000908152600a602052604090205460ff16610e1157600080fd5b610e1a856108b9565b610e2357600080fd5b610e306276a70042611aeb565b6276a700610e3e8542611aeb565b610e489190611aeb565b11610e5257600080fd5b610e5c8342611aeb565b600086815260076020526040902055610e7485611402565b15610e8257610e828561141f565b610e8c84866114a8565b8115610f1b576008546009546040516306ab592360e01b81526001600160a01b03909216916306ab592391610ec79189908990600401611a9d565b602060405180830381600087803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f199190611abc565b505b6001600160a01b038416857fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d9610f518642611aeb565b60405190815260200160405180910390a3610f6c8342611aeb565b95945050505050565b600080610f81836107de565b9050806001600160a01b0316846001600160a01b03161480610fbc5750836001600160a01b0316610fb184610497565b6001600160a01b0316145b806105e857506105e88185610b8e565b826001600160a01b0316610fdf82610cba565b6001600160a01b0316146110435760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610533565b6001600160a01b0382166110a55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610533565b6110b0600082610cef565b6001600160a01b03831660009081526003602052604081208054600192906110d9908490611b64565b90915550506001600160a01b0382166000908152600360205260408120805460019290611107908490611aeb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020611c9783398151915291a4505050565b3361115f61089b565b6001600160a01b0316146108995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156112655760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610533565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6112dd848484610fcc565b6112e9848484846115c8565b6109745760405162461bcd60e51b815260040161053390611b7b565b6060816113295750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611353578061133d81611bcd565b915061134c9050600a83611bfe565b915061132d565b6000816001600160401b0381111561136d5761136d6118b2565b6040519080825280601f01601f191660200182016040528015611397576020820181803683370190505b5090505b84156105e8576113ac600183611b64565b91506113b9600a86611c12565b6113c4906030611aeb565b60f81b8183815181106113d9576113d9611c26565b60200101906001600160f81b031916908160001a9053506113fb600a86611bfe565b945061139b565b6000908152600260205260409020546001600160a01b0316151590565b600061142a82610cba565b9050611437600083610cef565b6001600160a01b0381166000908152600360205260408120805460019290611460908490611b64565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020611c97833981519152908390a45050565b6001600160a01b0382166114fe5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610533565b61150781611402565b156115535760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610533565b6001600160a01b038216600090815260036020526040812080546001929061157c908490611aeb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611c97833981519152908290a45050565b60006001600160a01b0384163b156116ca57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061160c903390899088908890600401611c3c565b602060405180830381600087803b15801561162657600080fd5b505af1925050508015611656575060408051601f3d908101601f1916820190925261165391810190611c79565b60015b6116b0573d808015611684576040519150601f19603f3d011682016040523d82523d6000602084013e611689565b606091505b5080516116a85760405162461bcd60e51b815260040161053390611b7b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506105e8565b5060016105e8565b6001600160e01b031981168114610c3257600080fd5b6000602082840312156116fa57600080fd5b8135610b87816116d2565b60005b83811015611720578181015183820152602001611708565b838111156109745750506000910152565b60008151808452611749816020860160208601611705565b601f01601f19169290920160200192915050565b602081526000610b876020830184611731565b60006020828403121561178257600080fd5b5035919050565b6001600160a01b0381168114610c3257600080fd5b600080604083850312156117b157600080fd5b82356117bc81611789565b946020939093013593505050565b6000806000606084860312156117df57600080fd5b8335925060208401356117f181611789565b929592945050506040919091013590565b60008060006060848603121561181757600080fd5b833561182281611789565b925060208401356117f181611789565b6000806040838503121561184557600080fd5b82359150602083013561185781611789565b809150509250929050565b60006020828403121561187457600080fd5b8135610b8781611789565b6000806040838503121561189257600080fd5b823561189d81611789565b91506020830135801515811461185757600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118de57600080fd5b84356118e981611789565b935060208501356118f981611789565b92506040850135915060608501356001600160401b038082111561191c57600080fd5b818701915087601f83011261193057600080fd5b813581811115611942576119426118b2565b604051601f8201601f19908116603f0116810190838211818310171561196a5761196a6118b2565b816040528281528a602084870101111561198357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156119ba57600080fd5b50508035926020909101359150565b600080604083850312156119dc57600080fd5b82356119e781611789565b9150602083013561185781611789565b600181811c90821680611a0b57607f821691505b60208210811415611a2c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600060208284031215611a9257600080fd5b8151610b8781611789565b92835260208301919091526001600160a01b0316604082015260600190565b600060208284031215611ace57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611afe57611afe611ad5565b500190565b60008351611b15818460208801611705565b835190830190611b29818360208801611705565b01949350505050565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b600082821015611b7657611b76611ad5565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611be157611be1611ad5565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c0d57611c0d611be8565b500490565b600082611c2157611c21611be8565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c6f90830184611731565b9695505050505050565b600060208284031215611c8b57600080fd5b8151610b87816116d256feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201eb3734020dbf2890f45a554d943b5ea945a3f944e37ae39fbc2c0fd60d821cd64736f6c63430008090033";

type BaseRegistrarImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseRegistrarImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseRegistrarImplementation__factory extends ContractFactory {
  constructor(...args: BaseRegistrarImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ens: PromiseOrValue<string>,
    _baseNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseRegistrarImplementation> {
    return super.deploy(
      _ens,
      _baseNode,
      overrides || {}
    ) as Promise<BaseRegistrarImplementation>;
  }
  override getDeployTransaction(
    _ens: PromiseOrValue<string>,
    _baseNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ens, _baseNode, overrides || {});
  }
  override attach(address: string): BaseRegistrarImplementation {
    return super.attach(address) as BaseRegistrarImplementation;
  }
  override connect(signer: Signer): BaseRegistrarImplementation__factory {
    return super.connect(signer) as BaseRegistrarImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseRegistrarImplementationInterface {
    return new utils.Interface(_abi) as BaseRegistrarImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseRegistrarImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseRegistrarImplementation;
  }
}
