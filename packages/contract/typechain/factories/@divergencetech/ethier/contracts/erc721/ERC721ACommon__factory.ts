/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721ACommon,
  ERC721ACommonInterface,
} from "../../../../../@divergencetech/ethier/contracts/erc721/ERC721ACommon";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3438038062001a3483398101604081905262000034916200024f565b8151829082906200004d906002906020850190620000dc565b50805162000063906003906020840190620000dc565b5050600080555062000075336200008a565b50506009805460ff60a01b19169055620002f6565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ea90620002b9565b90600052602060002090601f0160209004810192826200010e576000855562000159565b82601f106200012957805160ff191683800117855562000159565b8280016001018555821562000159579182015b82811115620001595782518255916020019190600101906200013c565b50620001679291506200016b565b5090565b5b808211156200016757600081556001016200016c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001aa57600080fd5b81516001600160401b0380821115620001c757620001c762000182565b604051601f8301601f19908116603f01168101908282118183101715620001f257620001f262000182565b816040528381526020925086838588010111156200020f57600080fd5b600091505b8382101562000233578582018301518183018401529082019062000214565b83821115620002455760008385830101525b9695505050505050565b600080604083850312156200026357600080fd5b82516001600160401b03808211156200027b57600080fd5b620002898683870162000198565b93506020850151915080821115620002a057600080fd5b50620002af8582860162000198565b9150509250929050565b600181811c90821680620002ce57607f821691505b60208210811415620002f057634e487b7160e01b600052602260045260246000fd5b50919050565b61172e80620003066000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806301ffc9a71461010157806306fdde0314610129578063081812fc1461013e578063095ea7b31461015e57806318160ddd1461017357806323b872dd146101895780633f4ba83a1461019c57806342842e0e146101a45780635c975abb146101b75780636352211e146101bf57806370a08231146101d2578063715018a6146101e55780638456cb59146101ed5780638da5cb5b146101f557806395d89b41146101fd578063a22cb46514610205578063b88d4fde14610218578063c87b56dd1461022b578063e985e9c51461023e578063f2fde38b14610251575b600080fd5b61011461010f366004611278565b610264565b60405190151581526020015b60405180910390f35b610131610275565b60405161012091906112ed565b61015161014c366004611300565b610307565b6040516101209190611319565b61017161016c366004611342565b61034b565b005b600154600054035b604051908152602001610120565b61017161019736600461136e565b6103d2565b6101716103dd565b6101716101b236600461136e565b6103ef565b61011461040a565b6101516101cd366004611300565b61041a565b61017b6101e03660046113af565b61042c565b61017161047a565b61017161048c565b61015161049c565b6101316104ab565b6101716102133660046113cc565b6104ba565b610171610226366004611420565b61056e565b610131610239366004611300565b6105b8565b61011461024c3660046114ff565b61064a565b61017161025f3660046113af565b6106c1565b600061026f8261073f565b92915050565b6060600280546102849061152d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b09061152d565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b5050505050905090565b60006103128261078f565b61032f576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103568261041a565b9050806001600160a01b0316836001600160a01b0316141561038b5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146103c2576103a5813361064a565b6103c2576040516367d9dca160e11b815260040160405180910390fd5b6103cd8383836107ba565b505050565b6103cd838383610816565b6103e5610a10565b6103ed610a6f565b565b6103cd8383836040518060200160405280600081525061056e565b600954600160a01b900460ff1690565b600061042582610abe565b5192915050565b60006001600160a01b038216610455576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610482610a10565b6103ed6000610bd8565b610494610a10565b6103ed610c2a565b6009546001600160a01b031690565b6060600380546102849061152d565b336104c481610c6d565b6001600160a01b0316836001600160a01b0316141561056457816104e95760016104ec565b60005b6001600160a01b0382166000908152600860205260409020805460ff19166001838181111561051d5761051d611568565b0217905550826001600160a01b0316816001600160a01b03166000805160206116d983398151915284604051610557911515815260200190565b60405180910390a3505050565b6103cd8383610dde565b610579848484610816565b6001600160a01b0383163b156105b25761059584848484610e62565b6105b2576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606105c38261078f565b6105e057604051630a14c4b560e41b815260040160405180910390fd5b60006105f760408051602081019091526000815290565b90508051600014156106185760405180602001604052806000815250610643565b8061062284610f59565b60405160200161063392919061157e565b6040516020818303038152906040525b9392505050565b6001600160a01b03808316600090815260076020908152604080832093851683529290529081205460ff16156106825750600161026f565b6001600160a01b03831660009081526008602052604081205460ff1660018111156106af576106af611568565b14801561064357506106438383611056565b6106c9610a10565b6001600160a01b0381166107335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61073c81610bd8565b50565b60006001600160e01b031982166380ac58cd60e01b148061077057506001600160e01b03198216635b5e139f60e01b145b8061026f57506301ffc9a760e01b6001600160e01b031983161461026f565b600080548210801561026f575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061082182610abe565b9050836001600160a01b031681600001516001600160a01b0316146108585760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03861614806108765750610876853361064a565b8061089157503361088684610307565b6001600160a01b0316145b9050806108b157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166108d857604051633a954ecd60e21b815260040160405180910390fd5b6108e58585856001611094565b6108f1600084876107ba565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166109c45760005482146109c457805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b33610a1961049c565b6001600160a01b0316146103ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072a565b610a776110ed565b6009805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610ab49190611319565b60405180910390a1565b604080516060810182526000808252602082018190529181019190915281600054811015610bbf57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290610bbd5780516001600160a01b031615610b54579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215610bb8579392505050565b610b54565b505b604051636f96cda160e11b815260040160405180910390fd5b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c32611138565b6009805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610aa73390565b600080468060018114610ca25760898114610cbe5760048114610cda57620138818114610cf6576105398114610d1257610d2a565b73a5409ec958c83c3f309868babaca7c86dcb077c19250610d2a565b7358807bad0b376efc12f5ad86aac70e78ed67deae9250610d2a565b73f57b2c51ded3a29e6891aba85459d600256cf3179250610d2a565b73ff7ca10af37178bdd056628ef42fd7f799fac77c9250610d2a565b73e1a2bbc877b29adbc56d2659dbcb0ae14ee6207192505b506001600160a01b0382161580610d415750806089145b80610d4e57508062013881145b15610d5a575092915050565b60405163c455279160e01b81526001600160a01b0383169063c455279190610d86908790600401611319565b60206040518083038186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd691906115ad565b949350505050565b6001600160a01b038216331415610e085760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192916000805160206116d9833981519152910160405180910390a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610e979033908990889088906004016115ca565b602060405180830381600087803b158015610eb157600080fd5b505af1925050508015610ee1575060408051601f3d908101601f19168201909252610ede91810190611607565b60015b610f3c573d808015610f0f576040519150601f19603f3d011682016040523d82523d6000602084013e610f14565b606091505b508051610f34576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606081610f7d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fa75780610f918161163a565b9150610fa09050600a8361166b565b9150610f81565b6000816001600160401b03811115610fc157610fc161140a565b6040519080825280601f01601f191660200182016040528015610feb576020820181803683370190505b5090505b8415610dd65761100060018361167f565b915061100d600a86611696565b6110189060306116aa565b60f81b81838151811061102d5761102d6116c2565b60200101906001600160f81b031916908160001a90535061104f600a8661166b565b9450610fef565b60008061106284610c6d565b90506001600160a01b03811615801590610dd65750826001600160a01b0316816001600160a01b031614949350505050565b61109c61040a565b156110e15760405162461bcd60e51b8152602060048201526015602482015274115490cdcc8c5050dbdb5b5bdb8e881c185d5cd959605a1b604482015260640161072a565b6105b284848484611180565b6110f561040a565b6103ed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161072a565b61114061040a565b156103ed5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161072a565b6001600160a01b03831615806111c2575060016001600160a01b03841660009081526008602052604090205460ff1660018111156111c0576111c0611568565b145b156111cc576105b2565b60006111d784610c6d565b90506001600160a01b03811661121057506001600160a01b0383166000908152600860205260409020805460ff191660011790556105b2565b6112198461042c565b610a0957806001600160a01b0316846001600160a01b03166000805160206116d98339815191526001604051611253911515815260200190565b60405180910390a35050505050565b6001600160e01b03198116811461073c57600080fd5b60006020828403121561128a57600080fd5b813561064381611262565b60005b838110156112b0578181015183820152602001611298565b838111156105b25750506000910152565b600081518084526112d9816020860160208601611295565b601f01601f19169290920160200192915050565b60208152600061064360208301846112c1565b60006020828403121561131257600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461073c57600080fd5b6000806040838503121561135557600080fd5b82356113608161132d565b946020939093013593505050565b60008060006060848603121561138357600080fd5b833561138e8161132d565b9250602084013561139e8161132d565b929592945050506040919091013590565b6000602082840312156113c157600080fd5b81356106438161132d565b600080604083850312156113df57600080fd5b82356113ea8161132d565b9150602083013580151581146113ff57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561143657600080fd5b84356114418161132d565b935060208501356114518161132d565b92506040850135915060608501356001600160401b038082111561147457600080fd5b818701915087601f83011261148857600080fd5b81358181111561149a5761149a61140a565b604051601f8201601f19908116603f011681019083821181831017156114c2576114c261140a565b816040528281528a60208487010111156114db57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561151257600080fd5b823561151d8161132d565b915060208301356113ff8161132d565b600181811c9082168061154157607f821691505b6020821081141561156257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60008351611590818460208801611295565b8351908301906115a4818360208801611295565b01949350505050565b6000602082840312156115bf57600080fd5b81516106438161132d565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115fd908301846112c1565b9695505050505050565b60006020828403121561161957600080fd5b815161064381611262565b634e487b7160e01b600052601160045260246000fd5b600060001982141561164e5761164e611624565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261167a5761167a611655565b500490565b60008282101561169157611691611624565b500390565b6000826116a5576116a5611655565b500690565b600082198211156116bd576116bd611624565b500190565b634e487b7160e01b600052603260045260246000fdfe17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31a26469706673582212204fe7599ff07d1496a758e526d174dcd91338c317393e6b3738ba0e6de868b58564736f6c63430008090033";

type ERC721ACommonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ACommonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ACommon__factory extends ContractFactory {
  constructor(...args: ERC721ACommonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ACommon> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721ACommon>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721ACommon {
    return super.attach(address) as ERC721ACommon;
  }
  override connect(signer: Signer): ERC721ACommon__factory {
    return super.connect(signer) as ERC721ACommon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ACommonInterface {
    return new utils.Interface(_abi) as ERC721ACommonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ACommon {
    return new Contract(address, _abi, signerOrProvider) as ERC721ACommon;
  }
}
